function make_bullets() {for(var i = 0; i < max_bullets; i++) {bullets[i] = new Array();bullets[i]['alive'] = false;}}function move_bullets() {bullet_timer++;for(var i = 0; i < max_bullets; ++i) {if(bullets[i]['alive']) {bullets[i]['x'] += bullet_speed * bullets[i]['direction'];if(bullets[i]['x'] > canvas.width - window_x || bullets[i]['x'] < 0 - window_x) {bullets[i]['alive'] = false} else if (pixel_to_tile(bullets[i]['x'], bullets[i]['y']) > 0) {bullets[i]['x'] -= bullet_speed * bullets[i]['direction'];bullets[i]['alive'] = false;fire_particles(bullets[i]['x'], bullets[i]['y'], 2, 'red');} else {for(var j = 0; j < enemies.length; ++j) {if(enemies[j].alive) {if(bullets[i] && intersect(bullets[i].x, bullets[i].y, 4, 4,enemies[j].x + 10, enemies[j].y, 12, 48)) {enemies[j].alive = false;bullets[i].alive = false;fire_particles(bullets[i]['x'], bullets[i]['y'], 2, 'red');fire_particles(enemies[j]['x'] + 16, enemies[j]['y']+ 16, 4,'red');}}}for(var k = 0; k < entities.length; ++k) {if(entities[k].type == CRATE) {if(entities[k].x < bullets[i].x) {} else {}if(bullets[i] && intersect(bullets[i].x, bullets[i].y, 4, 4,entities[k].x, entities[k].y, 32, 32)) {bullets[i].alive = false;fire_particles(bullets[i]['x'], bullets[i]['y'], 2, 'red');}}}}}}}function dude_fire() {if(bullet_timer > 10) {bullet_timer = 0;for(var i = 0; i < max_bullets; ++i) {if(!bullets[i]['alive']) {bullets[i]['x'] = player.x + 26;bullets[i]['y'] = player.y + 25;if(player.crouching) {bullets[i]['y'] += 10;}bullets[i]['direction'] = player.direction;bullets[i]['alive'] = true;break;}}}}function draw_bullets() {for(var i = 0; i < bullets.length; ++i) {if(bullets[i]['alive']) {ctx.drawImage(bullet_img, 0, 0, 4, 4, bullets[i]['x'] + window_x, bullets[i]['y'] + window_y, 4, 4);}}}var game_state;var INITIALIZE = 0;var START = 1;var PAUSE = 2;var MENU = 3;var INTERSTITIAL = 4;var SWITCH = 256;var DOOR = 257;var TELEPORTER = 258;var map;var map_loaded = false;var current_level = '0';var TILE_WIDTH = 32;var EMPTY = 0;var PLAYER_START = 1;var ENEMY_1_START = 3;var ENEMY_2_START = 4;var EMPTY_BLOCKING = 255;var JETPACK = 9;var JUMPER = 10;var CRATE = 11;var FLUID = 12;var fluid_anim = [0, 1, 2, 3];var SWITCH_LEFT = 32;var SWITCH_FLOOR = 33;var SWITCH_RIGHT = 34;var SWITCH_SHOOTABLE_LEFT = 35;var SWITCH_SHOOTABLE_RIGHT = 36;var SWITCH_TOGGLE_LEFT = 37;var SWITCH_TOGGLE_RIGHT = 38;var DOOR_TOP = 40;var DOOR_BOTTOM = 41;var DOOR_LEFT = 42;var DOOR_RIGHT = 43;var SWITCH_1 = 16;var SWITCH_2 = 17;var SWITCH_3 = 18;var SWITCH_4 = 19;var SWITCH_5 = 20;var SWITCH_6 = 21;var SWITCH_7 = 22;var SWITCH_8 = 23;var DOOR_1 = 24;var DOOR_2 = 25;var DOOR_3 = 26;var DOOR_4 = 27;var DOOR_5 = 28;var DOOR_6 = 29;var DOOR_7 = 30;var DOOR_8 = 31;var WALK_LEFT = 0;var WALK_RIGHT = 1;var JET_LEFT = 2;var JET_RIGHT = 3;var STAND_LEFT = 4;var STAND_RIGHT = 5;var STAND = 6;var CROUCH_LEFT = 7;var CROUCH_RIGHT = 8;var DEACTIVATED = 0;var ACTIVATED = 1;var DEACTIVATING = 2;var ACTIVATING = 3;var OPEN = 1;var CLOSED = 0;var teleporter_anim = new Array();teleporter_anim[OPEN] = [0, 1, 2, 3, 4];teleporter_anim[CLOSED] = [5, 5, 5];var enemies = new Array();var enemy_bullet_timer = 4;var max_enemy_bullets = 100;var enemy_bullets = new Array(max_enemy_bullets);var enemy_anim = new Array();enemy_anim[WALK_RIGHT] = [7, 6, 5, 4];enemy_anim[WALK_LEFT] = [0, 1, 2, 3];enemy_anim[STAND] = [6, 6, 6];var max_particles = 1000;var particles = new Array(max_particles);var player;var robot_frame = 0;var anim = new Array();anim[WALK_RIGHT] = [0, 1, 2, 3, 4, 5];anim[WALK_LEFT] = [8, 7, 6, 11, 10, 9];anim[JET_RIGHT] = [15, 16, 17];anim[JET_LEFT] = [12, 13, 14];anim[STAND_LEFT] = [18];anim[STAND_RIGHT] = [19];anim[CROUCH_LEFT] = [20];anim[CROUCH_RIGHT] = [21];var current_anim = anim[WALK_RIGHT];var bullet_timer = 4;var max_bullets = 10;var bullets = new Array(max_bullets);var bullet_speed = 8;var window_x = 0;var window_y = 0;var reset_level = false;var reset_timer = 0;var animating = false;var inertiaX = 0;var inertiaY = 0;var gravity = .5;var waitIndex = 0;var frameRate = 6;var canvas = null;var ctx = null;var keys = new Array();var entities = new Array();var entity_anim = new Array();entity_anim[ACTIVATED] = [0, 1, 2];entity_anim[DEACTIVATED] = [3, 4, 5];var door_anim = new Array();door_anim[ACTIVATED] = [5, 4, 3, 2, 1, 0];door_anim[DEACTIVATED] = [0, 1, 2, 3, 4, 5];var alert_jetpack_img = new Image();var hud_img = new Image();var font_img = new Image();var tile_img = new Image();var dude_img = new Image();var enemy_img = new Image();var enemy_2_img = new Image();var map_img = new Image();var bullet_img = new Image();var parallax_img = new Image();var images = new Array();images['crate_1'] = new Image();images['switch_1'] = new Image();images['switch_2'] = new Image();images['door_1'] = new Image();images['door_2'] = new Image();images['door_3'] = new Image();images['door_4'] = new Image();images['fluid_1'] = new Image();images['jetpack_icon'] = new Image();images['teleport_1'] = new Image();images['teleport_2'] = new Image();images['fuel_overlay'] = new Image();function build_crate(x_t, y_t, tp, img, tile, key) {var entity = new Entity(x_t, y_t, tp, img, tile, key);entity.is_teleportable = true;entity.check_player = function() {if(!player.grounded && player.y + 32 < this.y) {if(player.y > this.y - 48) {player.y = this.y - 48;}player.on_a_crate = true;}if(player.grounded && !player.on_a_crate){if (this.x - 15 > player.x) {if(player.grounded) {this.x += 2;if(pixel_to_tile(this.x + 32, this.y) > 0) {this.x -= 2;player.x-=4;}}player.x-=4;} else if (this.x + 15 < player.x) {if(player.grounded) {this.x -= 2;if(pixel_to_tile(this.x, this.y) > 0) {this.x += 2;player.x+=4;}}player.x+=4;}}};entity.move = function() {for(var i = 0; i < entities.length; ++i) {if(intersect(this.x, this.y, 32, 32, entities[i].x, entities[i].y, 32, 23)) {if(entities[i].type == CRATE) {if(this.y > entities[i].y) {entities.y--;}if(this.x > entities[i].x) {this.x++;entities.x--;} else if(this.x < entities[i].x) {this.x--;entities.x++;}}}}for(var k = 0; k < enemies.length; ++k) {if(intersect(this.x, this.y, 32, 32, enemies[k].x, enemies[k].y + 8, 32, 48)) {if(this.y_inertia > 1 && enemies[k].y_inertia == 1 && this.y < enemies[k].y) {enemies[k].alive = false;fire_particles(enemies[k].x, enemies[k].y, 4, 'red');}}}if(this.y_inertia < 10) {this.y_inertia = this.y_inertia * 2;} else {this.y_inertia = 10;}this.y += this.y_inertia;if(pixel_to_tile(this.x, this.y + 32) > 0 ||pixel_to_tile(this.x + 32, this.y + 32) > 0) {this.y -= this.y_inertia;this.y_inertia = 1;}};return entity;}function build_door(x_t, y_t, tp, img, tile, key) {var entity = new Entity(x_t, y_t, tp, img, tile, key);entity.move = function() {var trigger = get_trigger(this.key);if(trigger.state == DEACTIVATED && !this.state == DEACTIVATED) {console.log("opening door");this.state = DEACTIVATED;this.current_anim = door_anim[DEACTIVATED];this.frame = 0;map[this.y_tile][this.x_tile] = EMPTY;} else if(trigger.state == ACTIVATED && !this.state == ACTIVATED) {console.log("opening door");this.state = ACTIVATED;map[this.y_tile][this.x_tile] = EMPTY_BLOCKING;this.current_anim = door_anim[ACTIVATED];this.frame = 0;for(var j = 0; j < enemies.length; ++j) {if(enemies[j].alive) {if(this && intersect(this.x, this.y, 32, 32,enemies[j].x + 10, enemies[j].y, 12, 48)) {trigger.state = DEACTIVATED;enemies[j].alive = false;fire_particles(enemies[j]['x'] + 16, enemies[j]['y']+ 16, 4,'red');}}}}};return entity;}var current_key_id;var current_tile = 1;var key_delay = 5;var key_timer = 11;var map = [[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,1,1,1,2,2,2,2,2,2,2,7,2,2,3,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,2,2,2,2,2,2,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,22,27,27,22,23,0,0,5,5,0,0,0,0,0,0,0,5,0,0,0,5,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,22,0,0,5,5,0,0,0,0,0,0,0,5,0,0,0,5,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,0,0,5,5,0,0,0,0,0,0,0,5,0,0,0,5,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]];var WALK_LEFT = 0;var WALK_RIGHT = 1;var JET_LEFT = 2;var JET_RIGHT = 3;var STAND_LEFT = 4;var STAND_RIGHT = 5;var bulletY = 0;var bullet_timer = 4;var window_x = 0;var window_y = 0;var enemies = new Array();var energy = 100;var max_particles = 100;var particles = new Array(max_particles);var font_img = new Image();var tile_img = new Image();var dude_img = new Image();var enemy_img = new Image();var map_img = new Image();var bullet_img = new Image();var menu_background_img = new Image();function load_images() {font_img.src = 'images/small_font.gif';tile_img.src = 'images/tiles.png';dude_img.src = 'images/dude.png';map_img.src = 'images/map.png';bullet_img.src = 'images/bullet.png';enemy_img.src = 'images/enemy_1.png';menu_background_img.src = 'images/menu_background.png';}function pixel_to_tile(x, y) {x_tile = x >> 5;y_tile = y >> 5;return map[y_tile][x_tile];}function set_tile(x, y) {x_tile = x >> 5;y_tile = y >> 5;map[y_tile][x_tile] = current_tile;}function draw_tiles() {for(var i = 0; i < 20; ++i) {var sx = i%10 * 32;var sy = Math.floor(i/10) * 32;ctx.drawImage(map_img, sx, sy, 32, 32, i * 32, 0, 32, 32);}}function draw_current_tile() {if(current_tile >= 0) {var sx = current_tile%10 * 32;var sy = Math.floor(current_tile/10) * 32;ctx.drawImage(map_img, sx, sy, 32, 32, 16, 8, 32, 32);} else {ctx.drawImage(enemy_img, 0, 0, 32, 32, 16, 8, 32, 32);}}var inertiaY = 0;var gravity = .5;var robotX = 500;var robotY = 100;var direction = 1;var waitIndex = 0;var canvas = null;var ctx = null;var keys = new Array();window.requestAnimFrame = (function(){return  window.requestAnimationFrame       ||window.webkitRequestAnimationFrame ||window.mozRequestAnimationFrame    ||window.oRequestAnimationFrame      ||window.msRequestAnimationFrame     ||function(callback, element){window.setTimeout(callback, 1000 / 60);};})();function animate() {requestAnimFrame( animate );game_loop();}function init() {load_images();canvas = document.getElementById('canvas');ctx = canvas.getContext('2d');canvas.addEventListener('mousedown', event_mousedown, false);animate();}function event_mousedown(event) {var x;var y;if (event.layerX || event.layerX == 0) {x = event.layerX;y = event.layerY;} else if (event.offsetX || event.offsetX == 0) {x = event.offsetX;y = event.offsetY;}if(y < 65) {if(x < 230) {tile = menu_images(x - 4, y);do_option(tile);}if(x > 230) {menu_pixel_to_tile(x - 230 - 4, y);}} else {set_tile(x - window_x - 4, y - window_y - 4);}}function do_option(option) {console.log(option);switch(option) {case 2:save_map();break;case 1:break;default:break;}}function menu_images(x, y) {x_tile = x >> 5;y_tile = y >> 5;return y_tile * 7 + x_tile;}function game_loop() {get_input();move_stuff();clear_screen();draw_map();draw_dude();draw_enemies();draw_hud();}function move_stuff() {inertiaY = inertiaY + gravity;robotY += inertiaY;if(pixel_to_tile(robotX, robotY+48) > 0 || pixel_to_tile(robotX + 32, robotY + 48) > 0|| pixel_to_tile(robotX, robotY+15) > 0 || pixel_to_tile(robotX + 32, robotY+15) > 0) {robotY -= inertiaY;inertiaY = 0;}}function draw_menu_tiles() {var x_start = 230;for(var i = 0; i < 40; ++i) {var sx = i%10 * 32;var sy = Math.floor(i/10) * 32;ctx.drawImage(map_img, sx, sy, 32, 32, x_start + (i%20 * 32), Math.floor(i/20) * 32, 32, 32);}}function menu_pixel_to_tile(x, y) {x_tile = x >> 5;y_tile = y >> 5;console.log("selected tile: " + y_tile + ":" + x_tile);console.log("selected tile: " + y_tile * 20 + x_tile);current_tile = y_tile * 20 + x_tile;}function draw_hud() {ctx.drawImage(tile_img, 0, 0, canvas.width, 70);ctx.drawImage(menu_background_img, 0, 0, 230, 64);draw_current_tile();draw_menu_tiles();}function fire_particles(x, y, size) {num_particles = 10;for(i = 0; i < max_particles; ++i) {if(!particles[i]['alive']) {particles[i]['alive'] = true;particles[i]['x'] = x;particles[i]['y'] = y;particles[i]['age'] = 0;particles[i]['size'] = size;num_particles--;if(num_particles < 0) {break;}}}}function drawRectangle(x, y, w, h, fill) {ctx.beginPath();ctx.rect(x, y, w, h);ctx.closePath();ctx.stroke();if (fill) ctx.fill();}function draw_enemies() {waitIndex++;for(i = 0; i < enemies.length; ++i) {ctx.drawImage(enemy_img, 0, 0, 32, 48,enemies[i].x + window_x,enemies[i].y + window_y, 32, 48);}}function draw_map() {for(y = 0; y<map.length; y++) {for(x = 0; x< map[0].length; x++) {var x_pos = window_x + x * 32;var y_pos = window_y + y * 32;if(x_pos < -32 || x_pos > ctx.width || y_pos < -32 || y_pos > ctx.height) {continue;}var index = map[y][x];if(index >= 0) {var sx = index%10 * 32;var sy = Math.floor(index/10) * 32;if(map[y][x] >= 0) {ctx.drawImage(map_img, sx, sy, 32, 32, x_pos, y_pos, 32, 32);}} else {ctx.drawImage(enemy_img, 0, 0, 32, 48, x_pos, y_pos - 16, 32, 48);}}}}function draw_dude() {ctx.drawImage(dude_img, 0, 0, 32, 48,robotX + window_x,robotY + window_y, 32, 48);}function draw_text(str, x, y) {str = str.toUpperCase();for (var i=0; i<str.length; i++){var index = str.charCodeAt(i) - 32;var sx = index%10 * 10;var sy = Math.floor(index/10) * 10;ctx.drawImage(font_img, sx, sy, 10, 10,x + (i * 12) , y, 10, 10);}}function get_input() {if(key_timer > key_delay) {key_timer = 0;if(88 in keys && keys[88]){dude_fire();}standing = true;if ((37 in keys && keys[37]) || (21 in keys && keys[21]) || (65 in keys && keys[65])){window_x += 16;}if ((39 in keys && keys[39]) || (22 in keys && keys[22]) || (68 in keys && keys[68])){window_x -= 16;}if ((219 in keys && keys[219]) || (219 in keys && keys[219]) || (219 in keys && keys[219])){if(current_tile > 0) {current_tile--;}}if ((221 in keys && keys[221]) || (221 in keys && keys[221]) || (221 in keys && keys[221])){current_tile++;}if(90 in keys && keys[90]){}}key_timer++;}function clear_screen() {ctx.drawImage(tile_img, 0, 0, canvas.width, canvas.height);}function save_map() {map_string = "[";for(y = 0; y<map.length; y++) {map_string += "[";for(x = 0; x< map[0].length; x++) {map_string += map[y][x];if (x < map[0].length - 1) {map_string += ",";}}map_string += "]";if (y < map.length - 1) {map_string += ",";}}map_string += "]\n";console.log(map_string);}window.onload = init;window.addEventListener('keydown',keyDown,true);window.addEventListener('keyup',keyUp,true);function keyDown(evt){ keys[evt.keyCode] = true; current_key_id = evt.keyCode; }function keyUp(evt){ keys[evt.keyCode] = false; }function Enemy(x_t, y_t, tp, img) {this.x_tile = x_t;this.y_tile = y_t;this.type = tp;this.x = this.x_tile * TILE_WIDTH;this.y = this.y_tile * TILE_WIDTH - 18;this.y_inertia = 1;this.image = img;this.current_anim = enemy_anim[WALK_LEFT];this.frame = 0;this.state = ACTIVATED;this.is_being_pushed = false;this.wait_index = 0;this.alive = true;this.direction = 1;this.bullet_timer = 21;map[this.y_tile][this.x_tile] = 0;}function make_enemies() {for(var y = 0; y<map.length; y++) {for(var x = 0; x< map[0].length; x++) {if(map[y][x] == ENEMY_1_START || map[y][x] == ENEMY_2_START) {enemies.push(make_enemy(x, y, map[y][x]));}}}}function make_enemy(x, y, type) {if(type == 3) {image = enemy_img;} else if (type == 4) {image = enemy_2_img;}return new Enemy(x, y, type, image, EMPTY);function make_enemy_bullets() {for(var i = 0; i < max_enemy_bullets; ++i) {enemy_bullets[i] = new Array();enemy_bullets[i].alive = false;enemy_bullets[i].bullet_timer = 10;}}function move_enemies() {for(var i = 0; i < enemies.length; ++i) {if(enemies[i].alive) {for(var k = 0; k < entities.length; ++k) {if(entities[k].type == CRATE) {if(intersect(enemies[i].x, enemies[i].y, 32, 48, entities[k].x, entities[k].y, 32, 32)) {if(enemies[i].x < entities[k].x) {enemies[i].x -=4;} else {enemies[i].x += 4;if(pixel_to_tile(enemies[i].x, enemies[i].y) > 0 || pixel_to_tile(enemies[i].x + 32, enemies[i].y) > 0) {if(enemies[i].x < entities[k].x) {enemies[i].x +=4;entities[k].x += 4;player.x += 4;} else {enemies[i].x -=4;entities[k].x -= 4;player.x -= 4;}}}}}}if(enemies[i].y_inertia < 10) {enemies[i].y_inertia = enemies[i].y_inertia * 2;} else {enemies[i].y_inertia = 10;}enemies[i].y += enemies[i].y_inertia;if(pixel_to_tile(enemies[i].x + 2, enemies[i].y + 47) > 0 ||pixel_to_tile(enemies[i].x + 30, enemies[i].y + 47) > 0) {enemies[i].y -= enemies[i].y_inertia;enemies[i].y_inertia = 1;}if(vertical_intersect(enemies[i].y, 48, player.y, 48)) {if(enemies[i].x > player.x) {enemies[i].direction = -1;} else {enemies[i].direction = 1;}if(enemies[i].bullet_timer < 20) {enemies[i].bullet_timer++;} else {enemy_fire(enemies[i].x, enemies[i].y, enemies[i].direction);enemies[i].bullet_timer = 0;}if(enemies[i].direction == -1) {enemies[i].current_anim = enemy_anim[WALK_RIGHT];} else {enemies[i].current_anim = enemy_anim[WALK_LEFT];}continue;}enemies[i].x += enemies[i].direction;if(pixel_to_tile(enemies[i].x, enemies[i].y + 30) > 0 ||pixel_to_tile(enemies[i].x + 32, enemies[i].y + 30) > 0) {enemies[i].direction = -enemies[i].direction;enemies[i].x += enemies[i].direction;}if(pixel_to_tile(enemies[i].x + 32, enemies[i].y + 50) < 1 ||pixel_to_tile(enemies[i].x, enemies[i].y + 50) < 1) {enemies[i].direction = -enemies[i].direction;}if(enemies[i].direction == -1) {enemies[i].current_anim = enemy_anim[WALK_RIGHT];} else {enemies[i].current_anim = enemy_anim[WALK_LEFT];}}}}function move_enemy_bullets() {enemy_bullet_timer++;var y_offset;if(player.crouching) {y_offset = 25;} else {y_offset = 10;}var robot_y_top = player.y + y_offset;for(var i = 0; i < enemy_bullets.length; ++i) {if(enemy_bullets[i].alive) {enemy_bullets[i].x += 4 * enemy_bullets[i].direction;if(enemy_bullets[i]['x'] > canvas.width - window_x || enemy_bullets[i]['x'] < 0 - window_x) {enemy_bullets[i].alive = false;} else if (pixel_to_tile(enemy_bullets[i]['x'], enemy_bullets[i]['y']) > 0) {enemy_bullets[i]['x'] -= bullet_speed * enemy_bullets[i]['direction'];enemy_bullets[i].alive = false;fire_particles(enemy_bullets[i]['x'], enemy_bullets[i]['y'], 2, 'red');} else {if(intersect(enemy_bullets[i].x, enemy_bullets[i].y, 4, 4, player.x + 10, robot_y_top, 12, 30)) {enemy_bullets[i].alive = false;fire_particles(enemy_bullets[i]['x'], enemy_bullets[i]['y'], 2, 'red');fire_particles(player.x + 16, player.y + 16, 4,'grey');reset_level = true;player.alive = false;}for(var k = 0; k < entities.length; ++k) {if(entities[k].type == CRATE) {if(enemy_bullets[i] && intersect(enemy_bullets[i].x, enemy_bullets[i].y, 4, 4,entities[k].x, entities[k].y, 32, 32)) {enemy_bullets[i].alive = false;fire_particles(enemy_bullets[i]['x'], enemy_bullets[i]['y'], 2, 'red');}}}}}}}function enemy_fire(x, y, direc) {for(var i = 0; i < enemy_bullets.length; ++i) {if(!enemy_bullets[i].alive) {enemy_bullets[i].x = x + 26;enemy_bullets[i].y = y + 16;enemy_bullets[i].direction = direc;enemy_bullets[i].alive = true;break;}}}function draw_enemy_bullets() {for(var i = 0; i < enemy_bullets.length; ++i) {if(enemy_bullets[i].alive) {ctx.drawImage(bullet_img, 0, 0, 4, 4, enemy_bullets[i].x + window_x, enemy_bullets[i].y + window_y, 4, 4);}}}function draw_enemies() {for(var i = 0; i < enemies.length; ++i) {enemies[i].wait_index++;if(enemies[i].alive) {if(enemies[i].wait_index > frameRate) {enemies[i].wait_index = 0;enemies[i].frame++;}if(enemies[i].frame >= enemies[i].current_anim.length) {enemies[i].frame = 0;}ctx.drawImage(enemies[i].image, enemies[i].current_anim[enemies[i].frame] * 32, 0, 32, 48,enemies[i].x + window_x,enemies[i].y + window_y, 32, 48);}}}function Entity(x_t, y_t, tp, img, tile, key) {this.x_tile = x_t;this.y_tile = y_t;this.y_inertia = 0;this.type = tp;this.key = key;this.x = this.x_tile * TILE_WIDTH;this.y = this.y_tile * TILE_WIDTH;this.image = img;this.current_anim = door_anim[ACTIVATED];this.frame = current_anim.length - 1;this.state = ACTIVATED;this.is_teleportable = false;this.is_being_pushed = false;this.wait_index = 0;this.alive = true;this.loop_animation = false;map[this.y_tile][this.x_tile] = tile;this.draw = function() {this.wait_index++;if(this.alive) {if(this.wait_index > frameRate) {this.wait_index = 0;this.frame++;}if(this.frame >= this.current_anim.length) {if(this.loop_animation) {this.frame = 0;} else {this.frame = this.current_anim.length - 1;}}if(this && this.image) {if(this.type == 13) {ctx.drawImage(this.image,this.current_anim[this.frame] * 32, 32, 32, 32,this.x + window_x,this.y + window_y, 32, 32);} else {ctx.drawImage(this.image,this.current_anim[this.frame] * 32, 0, 32, 32,this.x + window_x,this.y + window_y, 32, 32);}}}};this.move = function() {};this.check_player = function() {};}function make_entities() {map_iterate(function(x, y) {if(map[y][x] > 15 && map[y][x] < 32) {entities.push(make_entity(x, y, map[y][x], SWITCH));}});map_iterate(function(x, y) {if(map[y][x] > 31 && map[y][x] < 48) {entities.push(make_entity(x, y, map[y][x], DOOR));}});map_iterate(function(x, y) {if(map[y][x] > 8 && map[y][x] < 16) {entities.push(make_entity(x, y, map[y][x], map[y][x]));}})}function make_entity(x, y, type, parent_type) {if(map[y][x-1] == 48) {return build_switch(x, y, SWITCH, images['switch_1'], EMPTY, type);} else if (map[y][x+1] == 48) {return build_switch(x, y, SWITCH, images['switch_2'], EMPTY, type);} else if(map[y+1][x] == 49) {return build_teleporter(x, y, TELEPORTER, images['teleport_1'], EMPTY, type, parent_type);} else if(map[y-1][x] == 49) {return build_teleporter(x, y, TELEPORTER, images['teleport_2'], EMPTY, type, parent_type);} else if(map[y-1][x] == 64) {console.log('made a top door');return build_door(x, y, DOOR, images['door_1'], EMPTY_BLOCKING, type);} else if(map[y+1][x] == 64) {console.log('made a top door');return build_door(x, y, DOOR, images['door_2'], EMPTY_BLOCKING, type);} else if(map[y][x-1] == 64) {console.log('made a top door');return build_door(x, y, DOOR, images['door_3'], EMPTY_BLOCKING, type);} else if(map[y][x+1] == 64) {console.log('made a top door');return build_door(x, y, DOOR, images['door_4'], EMPTY_BLOCKING, type);} else if(type == JETPACK) {console.log('made a jetpack');return build_jetpack(x, y, type, images['jetpack_icon'], EMPTY);} else if(type == CRATE) {console.log('made a crate');return build_crate(x, y, type, images['crate_1'], EMPTY);} else if (type == '15') {console.log('made an exit');return build_exit(x, y, type, null, EMPTY);} else if (type == FLUID || type == 13) {console.log('made some fluid');return build_fluid(x, y, type, images['fluid_1'], EMPTY);} else if (type == JUMPER) {return build_jumper(x, y, type, null, EMPTY);} else {console.log('made something else');return new Entity(x, y, type, images['door_2'], EMPTY);}}function move_entities() {for(var i = 0; i < entities.length; ++i) {entities[i].move();}}function draw_entities() {for(var i = 0; i < entities.length; ++i) {entities[i].draw();}}function EntityManager() {this.entities = new Array();this.add_entity = function(entity) {this.entities.push(entity);};this.move_stuff = function() {if(this.entities && this.entities.length > 0) {for(var i = 0; i < this.entities.length - 1; ++i) {entities[i].move();for(var j = i + 1; j < this.entities.length; ++j) {if(entities[i].type == CRATE) {if(entities[j] == CRATE) {this.handle_crate_crate_collision(entities[i], entities[j]);} else if(entities[j].type == PLAYER) {this.handle_crate_player_collision(entities[i], entities[j]);} else if(entities[j].type == ENEMY) {this.handle_crate_enemy_collision(entities[i], entities[j]);} else if(entities[j].type == BULLET || entities[j].type == ENEMY_BULLET) {this.handle_crate_bullet_collision(entities[i], entities[j]);}} else if(entities[i].type == PLAYER) {if(entities[j].type == ENEMY_BULLET) {this.handle_player_enemy_bullet_collision(entities[i], entities[j]);} else if (entities[j].type == ENEMY) {this.handle_player_enemy_collision(entities[i], entities[j]);}} else if(entities[i].type == ENEMY){if(entities[j].type == BULLET) {this.handle_enemy_bullet_collision(entities[i], entities[j]);}}}}}};this.handle_crate_crate_collision = function(crate_1, crate_2) {};this.handle_crate_player_collision = function(crate, player) {};this.handle_crate_enemy_collision = function(crate, enemy) {};this.handle_crate_bullet_collision = function(crate, bullet) {};this.handle_player_enemy_bullet_collision = function(player, bullet) {};this.handle_player_enemy_collision = function(player, enemy) {};this.handle_enemy_bullet_collision = function(enemy, bullet) {};this.draw_stuff = function() {if(this.entities && this.entities.length > 0) {for(var i = 0; i < this.entities.length - 1; ++i) {for(var j = i + 1; j < this.entities.length; ++j) {}}}};}function build_exit(x_t, y_t, tp, img, tile, key) {var entity = new Entity(x_t, y_t, tp, img, tile, key);entity.move = function() {if (intersect(player.x, player.y+16,32, 32, this.x, this.y, 32, 32 )) {current_level++;load_map(current_level);}};return entity;}function build_fluid(x_t, y_t, tp, img, tile, key) {var entity = new Entity(x_t, y_t, tp, img, tile, key);entity.current_anim = fluid_anim;entity.loop_animation = true;entity.check_player = function() {};entity.move = function() {};return entity;}function init() {canvas = document.getElementById('canvas');ctx = canvas.getContext('2d');ctx.mozImageSmoothingEnabled = false;current_level = 0;load_map("0");}function initialize_data() {image_manager = new ImageManager();image_manager.load_images();enemies = new Array();entities = new Array();enemy_bullets = new Array(max_enemy_bullets);bullets = new Array(max_bullets);particles = new Array(max_particles);make_bullets();make_particles();make_entities();make_enemies();make_enemy_bullets();player = build_player();player.initialize();player.alive = true;window_x = 200 - player.x;window_y = 100 - player.y;if(!animating) {animate();animating = true;}}function game_loop() {get_input();move_stuff();if(player.x + window_x < 200) {window_x += 3;}if(player.x + window_x > canvas.width - 200) {window_x -= 3;}if(player.y + window_y <  100) {window_y += 8;}if(player.y + window_y > canvas.height - 100) {window_y -= 8;}clear_screen();draw_map();draw_particles();draw_bullets();if(player.alive) {player.draw();}draw_enemies();draw_entities();draw_enemy_bullets();draw_hud();if(reset_level) {resetting_level();}}function draw_parallax() {ctx.drawImage(parallax_img, 0, 0, 512, 512, window_x >> 4, window_y >> 4, 512, 512);}function move_stuff() {player.move();move_bullets();move_particles();move_entities();move_enemies();move_enemy_bullets();}function collides_with(type_1, type_2) {if(type_1 == CRATE || type_2 == CRATE) {return true;}}window.onload = init;window.addEventListener('keydown',keyDown,true);window.addEventListener('keyup',keyUp,true);function keyDown(evt){ keys[evt.keyCode] = true; }function keyUp(evt){ keys[evt.keyCode] = false; }function ImageManager() {var images_loaded = 0;this.load_images = function() {var directory = "/play/doctor-robot/images/";alert_jetpack_img.src = directory + 'jetpack.png';font_img.src = directory + 'small_font.gif';tile_img.src = directory + 'tiles.png';hud_img.src = directory + 'hud.png';dude_img.src = directory + 'dude_2.png';map_img.src = directory + 'Infiltrator.png';bullet_img.src = directory + 'bullet.png';enemy_img.src = directory + 'enemy_1b.png';enemy_2_img.src = directory + 'enemy_2.png';parallax_img.src = directory + 'parallax.png';images['switch_1'].src = directory + 'switch_1.png';images['switch_2'].src = directory + 'switch_2.png';images['teleport_1'].src = directory + 'teleport_1.png';images['teleport_2'].src = directory + 'teleport_2.png';images['crate_1'].src = directory + 'crate_1.png';images['door_1'].src = directory + 'door_1.png';images['door_2'].src = directory + 'door_2.png';images['door_3'].src = directory + 'door_3.png';images['door_4'].src = directory + 'door_4.png';images['fluid_1'].src = directory + 'fluid_1.png';images['jetpack_icon'].src = directory + 'jetpack_icon.png';images['fuel_overlay'].src = directory + 'fuel_overlay.png';};}function get_input() {if(88 in keys && keys[88]){if(player.alive) {dude_fire();}}player.standing = true;if (37 in keys && keys[37]) {player.moving_left = true;} else {player.moving_left = false;}if (39 in keys && keys[39]) {player.moving_right = true;} else {player.moving_right = false;}if (40 in keys && keys[40]) {player.down = true;} else {player.down = false;crouching = false;}if(90 in keys && keys[90]){player.up = true;} else {player.up = false;}}function build_jetpack(x_t, y_t, tp, img, tile, key) {entity = new Entity(x_t, y_t, tp, img, tile, key);entity.check_player = function() {if(intersect(player.x, player.y+32,32, 32, this.x, this.y, 32, 32 )) {this.alive = 0;player.has_jetpack = true;player.jetpack_fuel = 200;}};return entity;}function build_jumper(x_t, y_t, tp, img, tile, key) {var entity = new Entity(x_t, y_t, tp, img, tile, key);entity.check_player = function() {if (contains(player.x, player.y+16,32, 32, this.x, this.y, 32, 32 )) {if(player.grounded) {player.standing = false;player.y_inertia = -15;player.grounded = false;}}};return entity;}function load_map(level) {if(level > 1) {level = 0;current_level = 0;}var request = new XMLHttpRequest();request.open('GET', 'http:request.onreadystatechange = function() {if (request.readyState != 4 || request.status != 200) {return;}parse_map(request.responseText);initialize_data();};request.send(null);}function parse_map(map_data) {var rows = map_data.split('\n');map = new Array(rows.length);for(var y = 0; y < rows.length; ++y) {var cols = rows[y].split(',');map[y] = new Array(cols.length);for(var x = 0; x < cols.length; ++x) {map[y][x] = cols[x] - 1;}}map_loaded = true;}function draw_map() {map_iterate(function(x, y) {if(map[y][x] > 47) {var x_pos = window_x + x * 32;var y_pos = window_y + y * 32;if(x_pos > -32 || x_pos < ctx.width || y_pos > -32 || y_pos < ctx.height) {var index = map[y][x];var sx = index%16 * 32;var sy = Math.floor(index/16) * 32;ctx.drawImage(map_img, sx, sy, 32, 32, x_pos, y_pos, 32, 32);}}});}function pixel_to_tile(x, y) {var x_tile = x >> 5;var y_tile = y >> 5;var tile = map[y_tile][x_tile];if(tile > 47) {return map[y_tile][x_tile];} else {return 0;}}function true_pixel_to_tile(x, y) {var x_tile = x >> 5;var y_tile = y >> 5;return map[y_tile][x_tile];}function map_iterate(func) {for(y = 0; y<map.length; y++) {for(x = 0; x< map[0].length; x++) {func(x, y);}}}function resetting_level() {reset_timer++;if(reset_timer > 100) {reset_level = false;reset_timer = 0;load_map(current_level);}}function fire_particles(x, y, size, col) {var num_particles = 10;for(var i = 0; i < max_particles; ++i) {if(!particles[i]['alive']) {particles[i]['alive'] = true;particles[i]['x'] = x;particles[i]['y'] = y;particles[i]['age'] = 0;particles[i]['size'] = size;particles[i]['col'] = col;num_particles--;if(num_particles < 0) {break;}}}}function make_particles() {for(var i = 0; i < max_particles; i++) {particles[i] = new Array();particles[i]['alive'] = false;particles[i]['x_vel'] = Math.floor(Math.random()*10 - 5);particles[i]['y_vel'] = Math.floor(Math.random()*10 - 5);particles[i]['age'] = 0;}}function move_particles() {for(var i = 0; i < max_particles; ++i) {particles[i]['age']++;if(particles[i]['age'] > 100) { particles[i]['alive'] = false; particles[i]['age'] = 0; }if(particles[i]['alive']) {particles[i]['x'] += particles[i]['x_vel'];if(pixel_to_tile(particles[i]['x'], particles[i]['y']) > 0) {particles[i]['x'] -= particles[i]['x_vel'];particles[i]['x_vel'] = -particles[i]['x_vel'];}particles[i]['y_vel'] += .3 / particles[i].size;particles[i]['y'] += particles[i]['y_vel'];if(pixel_to_tile(particles[i]['x'], particles[i]['y']) > 0) {particles[i]['y'] -= particles[i]['y_vel'] * gravity / particles[i].size;particles[i]['y_vel'] = -particles[i]['y_vel'];}}}}function draw_particles() {for(var i = 0; i < max_particles; ++i) {if(particles[i]['alive']) {if(particles[i]['col'] == 'red') {ctx.fillStyle = "#" + (99 - particles[i]['age']) + "0000";} else if(particles[i]['col'] == 'gray') {ctx.fillStyle = "#" + (99 - particles[i]['age']) + "7777";} else {ctx.fillStyle = "#" + (99 - particles[i]['age']) + "7777";}drawRectangle(particles[i]['x'] + window_x, particles[i]['y'] + window_y, particles[i].size, particles[i].size, true);}}}function build_player() {map_iterate(function(x, y) {if(map[y][x] == PLAYER_START) {player = make_entity(x, y, map[y][x], EMPTY, PLAYER_START);player.y -= 23;}});player.initialize = function() {map_iterate(function(x, y) {if(map[y][x] == PLAYER_START) {this.x = x * 32;this.y = y * 32 - 23;map[y][x] = 0;}});this.direction = 1;this.crouching = false;this.has_jetpack = true;this.jetpack_fuel = 200;this.moving_left = false;this.moving_right = false;this.up = false;this.down = false;this.can_teleport = true;this.alive = true;this.pause_timer = 0;this.NORMAL = 0;this.TELEPORT_START = 1;this.TELEPORT_END = 2;this.target_x = 0;this.target_y = 0;this.state = this.NORMAL;this.on_a_crate = false;};player.move = function() {this.pause_timer--;if(this.pause_timer > 0) {return;} else {this.pause_timer = 0;}if(this.alive) {this.on_a_crate = false;for(var i = 0; i < entities.length; ++i) {if(intersect(this.x, this.y, 32, 48, entities[i].x, entities[i].y, 32, 32)) {entities[i].check_player();}}this.y_inertia = this.y_inertia + gravity;this.y += this.y_inertia;if(pixel_to_tile(this.x + 8, this.y+15) > 0 || pixel_to_tile(this.x + 24, this.y+15) > 0) {this.y -= this.y_inertia;this.y_inertia = 0;} else if(this.on_a_crate || pixel_to_tile(this.x + 8, this.y+48) > 0 || pixel_to_tile(this.x + 24, this.y + 48) > 0) {this.y -= this.y_inertia;this.y_inertia = 0;this.grounded = true;} else {this.grounded = false;}if(this.moving_left) {if(!this.crouching) {this.x -= 3;}if(pixel_to_tile(this.x + 8, this.y+32) > 0 || pixel_to_tile(this.x + 24, this.y + 32) > 0|| pixel_to_tile(this.x + 8, this.y+15) > 0 || pixel_to_tile(this.x + 24, this.y+15) > 0|| pixel_to_tile(this.x + 8, this.y+48) > 0 || pixel_to_tile(this.x + 24, this.y+48) > 0) {this.x += 3;this.standing = true;current_anim = anim[STAND_LEFT];} else {current_anim = anim[WALK_LEFT];}this.direction = -1;this.standing = false;}if(this.moving_right) {if(!this.crouching) {this.x += 3;}if(pixel_to_tile(this.x + 24, this.y+32) > 0 || pixel_to_tile(this.x + 24, this.y + 32) > 0|| pixel_to_tile(this.x + 24, this.y+15) > 0 || pixel_to_tile(this.x + 24, this.y + 15) > 0|| pixel_to_tile(this.x + 24, this.y+48) > 0 || pixel_to_tile(this.x + 24, this.y+48) > 0) {this.x -= 3;this.standing = true;current_anim = anim[STAND_RIGHT];} else {current_anim = anim[WALK_RIGHT];}this.direction = 1;this.standing = false;}if(this.up) {if(this.grounded) {this.standing = false;this.y_inertia = -9;this.grounded = false;}if(this.has_jetpack) {this.grounded = false;this.y_inertia = -4;this.jetpack_fuel -= 1;if(this.direction > 0) {current_anim = anim[JET_LEFT];} else {current_anim = anim[JET_RIGHT];}}}if(this.down) {if(this.grounded) {this.crouching = true;}} else {this.crouching = false;}if(this.standing) {if(this.direction > 0) {current_anim = anim[STAND_RIGHT];} else {current_anim = anim[STAND_LEFT];}}if(this.crouching && this.grounded) {if(this.direction > 0) {current_anim = anim[CROUCH_RIGHT];} else {current_anim = anim[CROUCH_LEFT];}} else if (this.crouching) {if(this.direction > 0) {current_anim = anim[STAND_RIGHT];} else {current_anim = anim[STAND_LEFT];}}if(this.jetpack_fuel < 0) {this.has_jetpack = false;}}};player.teleport = function(x, y) {this.x = x;this.y = y;};player.draw = function() {if(player.alive) {waitIndex++;if(waitIndex > frameRate) {waitIndex = 0;if(this.grounded) {this.frame++;}}if(this.frame >= current_anim.length) {this.frame = 0;}ctx.drawImage(dude_img, current_anim[this.frame] * 32, 0, 32, 48,this.x + window_x,this.y + window_y, 32, 48);}};return player;}function PlayfieldManager() {}function build_switch(x_t, y_t, tp, img, tile, key) {entity = new Entity(x_t, y_t, tp, img, tile, key);entity.move = function() {if(contains(player.x, player.y + 18, 32, 30, this.x, this.y, 32, 32)) {if(!this.is_being_pushed && this.state == ACTIVATED) {this.state = DEACTIVATED;this.current_anim = entity_anim[DEACTIVATED];this.wait_index = 0;this.frame = 0;this.is_being_pushed = true;} if (!this.is_being_pushed && this.state == DEACTIVATED) {this.state = ACTIVATED;this.wait_index = 0;this.current_anim = entity_anim[ACTIVATED];this.frame = 0;this.is_being_pushed = true;}}if(!intersect(player.x + 14, player.y + 18, 4, 30, this.x, this.y, 32, 32) && this.is_being_pushed) {this.is_being_pushed = false;}};return entity;}function build_teleporter(x_t, y_t, tp, img, tile, key, parent_type) {var entity = new Entity(x_t, y_t, tp, img, tile, key);entity.parent_type = parent_type;entity.state = OPEN;entity.current_anim = teleporter_anim[OPEN];entity.loop_animation = true;entity.get_trigger = function() {if(!this.trigger) {if(this.parent_type == DOOR) {this.trigger = get_trigger(key);} else {this.trigger = get_target(key);}}return this.trigger;};entity.move = function() {var trigger = this.get_trigger();if(this.state == OPEN && trigger.state == OPEN) {if(contains(player.x, player.y + 18, 32, 32, this.x, this.y, 32, 32)) {if(map[trigger.y_tile - 1][trigger.x_tile] > 1) {y_modified = trigger.y;} else {y_modified = trigger.y - 20;}player.teleport(trigger.x, y_modified);trigger.state = CLOSED;this.state = CLOSED;this.current_anim = teleporter_anim[CLOSED];trigger.current_anim = teleporter_anim[CLOSED];return;}for(var i = 0; i < entities.length; ++i) {if(entities[i].is_teleportable) {if(contains(entities[i].x, entities[i].y, 32, 32, this.x, this.y, 32, 32)) {entities[i].x = trigger.x;entities[i].y = trigger.y;this.state = CLOSED;trigger.state = CLOSED;this.current_anim = teleporter_anim[CLOSED];trigger.current_anim = teleporter_anim[CLOSED];return;}}}}if(this.state == CLOSED) {var stay_closed = false;if(intersect(player.x, player.y, 32, 32, this.x, this.y, 32, 32)) {stay_closed = true;}if(!stay_closed) {for(var i = 0; i < entities.length; ++i) {if(entities[i].is_teleportable && intersect(entities[i].x, entities[i].y, 32, 32, this.x, this.y, 32, 32)) {stay_closed = true;break;}}}if(!stay_closed) {this.state = OPEN;this.current_anim = teleporter_anim[OPEN];}}};entity.check_player = function() {};return entity;}function draw_hud() {ctx.drawImage(hud_img, 0, 0, canvas.width, 16);ctx.fillStyle = "#000000";drawRectangle(40,4, 50, 8, true);ctx.fillStyle = "#990000";drawRectangle(40, 4, player.jetpack_fuel/4, 8, true);ctx.drawImage(images['fuel_overlay'], 2, 2);}function clear_screen() {ctx.drawImage(tile_img, 0, 0, canvas.width, canvas.height);}function draw_text(str, x, y) {for (var i=0; i<str.length; i++){var index = str.charCodeAt(i) - 32;var sx = index%10 * 10;var sy = Math.floor(index/10) * 10;ctx.drawImage(font_img, sx, sy, 10, 10,x + (i * 12) , y, 10, 10);}}function vertical_intersect(y, yh, y2, y2h) {return y + yh > y2 && y < y2 + y2h;}function intersect(sx, sy, sw, sh, tx, ty, tw, th) {return sx + sw > tx && sx < tx + tw && sy + sh > ty && sy < ty + th;}function contains(sx, sy, sw, sh, tx, ty, tw, th) {return sx + 5 > tx && sx + sw - 5 < tx + tw && sy + 5 > ty && sy + sh - 5 < ty + th;}function drawRectangle(x, y, w, h, fill) {ctx.beginPath();ctx.rect(x, y, w, h);ctx.closePath();ctx.stroke();if (fill) ctx.fill();}function animate() {window.requestAnimFrame(animate);game_loop();}function get_trigger(id){for(var i = 0; i < entities.length; ++i) {if(entities[i].key == id - 16) {return entities[i];}}return 0;}function get_target(id) {for(var i = 0; i < entities.length; ++i) {if(entities[i].key == id + 16) {return entities[i];}}return 0;}window.requestAnimFrame = (function(){return  window.requestAnimationFrame   ||window.webkitRequestAnimationFrame ||window.mozRequestAnimationFrame    ||window.oRequestAnimationFrame      ||window.msRequestAnimationFrame     ||function(callback) {window.setTimeout(callback, 1000 / 60);};})();